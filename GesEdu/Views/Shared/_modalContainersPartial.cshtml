@using System.Text.Json

@* Modal de erros *@
<div class="modal fade ig-modal ig-modal-errors" id="error_modal" aria-labelledby="error_modal_label" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="error_modal_label"><i class="fas fa-exclamation-triangle"></i> Erros</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn ig-btn-blue" data-bs-dismiss="modal"><i class="fas fa-times"></i> Fechar</button>
            </div>
        </div>
    </div>
</div>

@* Modal de confirmação *@
<div class="modal fade ig-modal" id="confirm_modal" data-bs-backdrop="static" aria-labelledby="confirm_modal_title" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="confirm-modal-title" id="confirm_modal_title"></h5>
            </div>
            <div class="modal-body">
                <p></p>
            </div>
            <div class="modal-footer">
                <button id="confirm_modal_deny_btn" type="button" class="btn ig-btn-blue"><i class="fas fa-times"></i> Cancelar</button>
                <button id="confirm_modal_approve_btn" type="button" class="btn ig-btn-green" data-bs-dismiss="modal"><i class="fas fa-check"></i> Guardar alterações</button>
            </div>
        </div>
    </div>
</div>

@* Toasters *@
<div id="toast_container" class="ig-toast-container toast-container">
</div>

@* Loader *@
<div id="loader" class="ig-load ig-load-body" style="display: none">
    <span class="spinner-grow" role="status"></span> Aguarde por favor...
</div>


@* Event listener de erros na session lançados pelo global exception handler *@
<script>
    @{
        string? errorJsonString = string.Empty;

        if (HttpContextAccessor.HttpContext?.Session != null)
        {
            errorJsonString = Context.Session.GetString("ErrorMessages");

            HttpContextAccessor.HttpContext?.Session.Remove("ErrorMessages");
        }
    }

    $(function () {
    var errorObj;
    try {
    errorObj = JSON.parse(`@Html.Raw(errorJsonString)`);

    if (errorObj.messages.length > 0)
    ErrorToast(errorObj.messages);
    } catch {
    return;
    }
    });
</script>

@if (User.IsAdmin() || User.IsSimeDgeUser())
{
    <div class="modal fade ig-modal" id="uo_contact_modal" tabindex="-1" aria-labelledby="uo_contact_modal_label" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="uo_contact_modal_label">Contactos da Unidade Orgânica</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div>
                        <label class="form-label">Unidade Orgânica:</label>
                        <p class="ig-uo-name">
                            <span class="badge rounded-pill ig-uo-code">@User.GetCodigoServico()</span>
                            @User.GetNomeServico()
                        </p>
                    </div>
                    <div>
                        <label class="form-label">Diretor(a):</label>
                        <p>
                            @User.GetDiretorServico()
                        </p>
                    </div>
                    <hr />
                    @{
                        var contactos = User.GetContactosUo();

                        if (contactos is not null)
                        {
                            foreach (var contacto in contactos)
                            {
                                switch (contacto.Tipo_contacto)
                                {
                                    case "EMAIL":
                                        var tipoEmail = contacto.Valor_contacto!.Contains("direcao") ? "da Direção" : "dos Serviços";

                                        <div>
                                            <label class="form-label">Endereço de email @tipoEmail:</label>
                                            <p>
                                                <a href="mailto:@contacto.Valor_contacto">@contacto.Valor_contacto</a>
                                            </p>
                                        </div>
                                        break;
                                    case "TELEFONE1":
                                        <div>
                                            <label class="form-label">Telefone:</label>
                                            <p>
                                                @contacto.Valor_contacto
                                            </p>
                                        </div>
                                        break;
                                    default:
                                        break;
                                }
                            }
                        }
                    }
                </div>
            </div>
        </div>
    </div>
}


